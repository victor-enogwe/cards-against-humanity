# Generated by Django 2.2.9 on 2020-01-22 12:13

import api.utils
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('text', models.CharField(help_text='answer allows 2-255 characters(alphabets and -,_,.,\',",space)', max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(5, 'answer allows 2-255 characters(alphabets and -,_,.,\',",space)'), django.core.validators.RegexValidator('^[A-Za-z]([\\w+|-|\\s|\\\'|\\"|\\.|!]?)+', 'answer allows 2-255 characters(alphabets and -,_,.,\',",space)')])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', api.utils.AutoDateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('game_type', models.CharField(choices=[('cfh', 'cards for humanity'), ('cah', 'cards against humanity')], default='cfh', max_length=3)),
                ('round_time', models.SmallIntegerField(default=10, help_text='seconds', validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(60)])),
                ('rounds', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(5)])),
                ('num_players', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(8)])),
                ('status', models.CharField(choices=[('GAP', 'Awaiting Players'), ('GAC', 'Awaiting Czar'), ('GS', 'Game Started'), ('GE', 'Game Ended')], default='GAP', max_length=3)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', api.utils.AutoDateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('text', models.CharField(help_text='question allows 5-255 characters(alphabets and -,_,?,\',",space)', max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(5, 'question allows 5-255 characters(alphabets and -,_,?,\',",space)'), django.core.validators.RegexValidator('^[A-Za-z]([\\w+|-|\\s|\\\'|\\"|\\?|!]?)+', 'question allows 5-255 characters(alphabets and -,_,?,\',",space)')])),
                ('game_type', models.CharField(choices=[('cfh', 'cards for humanity'), ('cah', 'cards against humanity')], default='cfh', max_length=3)),
                ('card_type', models.CharField(choices=[('1', 'pick1'), ('2', 'pick2')], default='1', max_length=5)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', api.utils.AutoDateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('_id', djongo.models.fields.ObjectIdField(auto_created=True, primary_key=True, serialize=False)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('czar', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', api.utils.AutoDateTimeField(auto_now=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('game', 'player')},
            },
        ),
    ]
